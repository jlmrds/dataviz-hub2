{"version":3,"sources":["webpack://datavizhub-tuos/./src/components/style/visStyle.jsx","webpack://datavizhub-tuos/./src/images/TUOS_PRIMARY_LOGO_LINEAR_BLACK.png","webpack://datavizhub-tuos/./src/components/visualisation/visLayout.jsx","webpack://datavizhub-tuos/./src/templates/visualisation/visTemplate.jsx","webpack://datavizhub-tuos/./src/utils/hooks/loadMoreVisualisation.jsx"],"names":["ShareButton","styled","VisItem","props","row","col","VisDiv","currentMDXs","nextPageRef","title","pageTitle","pageSubtitle","className","keywords","style","background","WebkitBackgroundClip","WebkitTextFillColor","MozBackgroundClip","MozTextFillColor","Link","to","gridAutoFlow","gridTemplateRows","length","map","node","imagesrc","getImageSource","rowSpan","frontmatter","columnSpan","fields","slug","key","id","gridRow","gridColumn","src","UniversityIcon","maxWidth","left","top","transform","delay","height","width","backgroundImage","backgroundRepeat","objectFit","objectPosition","transition","alt","visibility","ref","href","target","rel","allMdx","data","allMDX","useRef","i","edges","push","Math","floor","random","loadMoreVisualisation","referenceId","pageLength","PAGE_LENGTH","refId","useState","slice","setCurrentMDXs","loadNextPage","setLoadNextPage","hasNextPage","setHasNextPage","useEffect","refObserver","IntersectionObserver","entries","isIntersecting","root","rootMargin","threshold","current","observe","hasNext","addMoreVisBox","document","querySelector","parentElement","appendChild","nextPageMDX"],"mappings":"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","file":"component---src-templates-visualisation-vis-template-jsx-45c601977debf26fac7e.js","sourcesContent":["import styled from \"styled-components\"\n\nexport const ShareButton = styled.div`\n  a {\n    margin: 0\n  }\n`\n\nexport const VisItem = styled.div`\n  display: block;\n  height: 100%;\n  width: 100%;\n  position: relative;\n\n  ${props => {\n    if (props.row == 1 && props.col > 1) {\n      return `\n        padding-bottom: calc(100% / ${props.col});\n      `\n    }\n    if (props.col == 1 && props.row > 1) {\n      return `\n        padding-bottom: calc(${props.row} * 100%);\n      `\n    }\n    if (props.col != 1 && props.row != 1) {\n      return `\n        padding-bottom: calc(${props.row} / ${props.col} * 100%);\n      `\n    }\n\n    return `\n      padding-bottom: 100%;\n    `\n  }}\n\n  @media screen and (max-width: 768px) {\n    padding-bottom: inherit;\n  }\n`\n\nexport const VisDiv = styled.div`\n  max-width: 550px;\n  margin: auto;\n`","export default __webpack_public_path__ + \"static/TUOS_PRIMARY_LOGO_LINEAR_BLACK-9dc28511e805e147ad2507cb69b5c261.png\";","import React from 'react'\nimport PropTypes from \"prop-types\"\nimport SEO from \"../shared/seo\"\nimport { Link } from \"gatsby\"\nimport { getImageSource } from \"../../utils/shared\"\nimport { VisItem } from \"../style/visStyle\"\nimport Fade from 'react-reveal/Fade';\nimport UniversityIcon from \"../../images/TUOS_PRIMARY_LOGO_LINEAR_BLACK.png\"\n\n\nconst visLayout = ({currentMDXs, nextPageRef, title}) => {\n  const pageTitle = title ? `| ${title}` : '';  \n  const pageSubtitle = \n    title ? \n      <p>Viewing items in <span className=\"text-gray-400 font-semibold\">{title}</span>.</p> \n    : <p>The latest from the University of Sheffield.</p>\n\n  return(\n    <>\n      <SEO \n        title={`Visualisation ${pageTitle}`} \n        keywords={[\"the university of sheffield\", \"data visualisation\", \"data visualisation hub\", \"research\", \"about dataviz\", title ?? '']} \n      />\n      <div className=\"bg-gray-900 w-full py-36 text-center\">\n\n          <h1 \n            className=\"w-full py-3 text-6xl font-extrabold\" \n            style={{\n              background: '-webkit-linear-gradient(135deg, rgba(255,121,180,1) 50%, rgba(255,134,250,1) 36%, rgba(41,197,255,1) 35%)',\n              WebkitBackgroundClip: 'text', \n              WebkitTextFillColor: 'transparent',\n              MozBackgroundClip: 'text',\n              MozTextFillColor: 'transparent'\n            }}\n          >\n            <Link to=\"/visualisation\">InfoVis</Link>\n          </h1> \n        <h3 className=\"text-gray-500\">{pageSubtitle}</h3>\n      </div>\n      <div className=\"min-h-80 flex flex-wrap justify-center pt-12 pb-32 bg-gray-900 px-5\">\n        <div \n          className=\"max-w-8xl w-full md:grid md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-1\"\n          style={{gridAutoFlow: 'dense', gridTemplateRows: 'min-content'}}\n        >\n          {currentMDXs.length > 0 && currentMDXs.map(({ node }) => {\n            let imagesrc = getImageSource(node, true);\n            let rowSpan = node.frontmatter.rowSpan ?? 1;\n            let columnSpan = node.frontmatter.columnSpan ?? 1;\n\n            return (\n              <Link \n                to={node.fields.slug} \n                key={node.id} \n                style={{gridRow: `span ${rowSpan}`, gridColumn: `span ${columnSpan}`}}\n                className=\"shadow-xl rounded-xl visualisationColourBorder\"\n              >\n                {/* university logo on loading */}\n                <img \n                  src={UniversityIcon} \n                  style={{maxWidth: '100px', left: '50%', top: '50%', transform: 'translate(-50%, -50%)'}} \n                  className=\"absolute\"\n                  />\n                {/* visualisation */}\n                <Fade delay={1000}>\n                  <VisItem row={rowSpan} col={columnSpan}>\n                    <div \n                      className=\"rounded-xl md:absolute md:top-0 md:left-0\"  \n                      style={{height: '100%', width: '100%', backgroundImage: `linear-gradient(135deg, #141e30 0%,#152033 6%,#20344c 65%,#243b55 100%)`, backgroundRepeat: 'no-repeat'}}\n                    >\n                      <img \n                        style={{height: '100%', width: '100%', objectFit: 'cover', objectPosition: 'center', transition: '.2s ease-out'}} \n                        className=\"rounded-xl\" \n                        src={imagesrc} \n                        alt={\"Visualisation: \" + node.frontmatter.title} \n                      />\n                    </div>\n                  </VisItem>\n                </Fade>\n              </Link>\n            )\n\n          })} \n          <div id=\"visualisation-invite\" style={{gridRow: 'span 1', gridColumn: 'span 1', visibility: 'hidden'}}>\n            <Fade delay={1000}>\n              <VisItem row={1} col={1}>\n                <div \n                  className=\"group rounded-xl relative md:absolute md:top-0 md:left-0 text-center flex\"  \n                  style={{height: '100%', width: '100%', backgroundImage: 'linear-gradient(135deg, #141e30 0%,#152033 6%,#20344c 65%,#243b55 100%)', backgroundRepeat: 'no-repeat'}}\n                >\n                  <h1 className=\"text-gray-300 font-bold m-auto\">Add your visualisations here</h1>\n                  <Link \n                    to=\"\"\n                    className=\"absolute text-sm text-gray-200 font-bold cursor-pointer bg-gray-600 rounded-md py-1 px-2 hidden group-hover:block\" \n                    style={{transform: 'translate(-50%, 0%)', left: '50%', top: '70%'}}>\n                      Learn how\n                  </Link>\n                </div>\n              </VisItem>\n            </Fade>\n          </div>\n        </div>\n        <div ref={nextPageRef} style={{height: '100px', width: '100%'}}></div>\n      </div>\n      <div className=\"bg-gray-900 text-center text-gray-600 pb-5 text-sm\">\n        This page is inspired by <a href=\"https://informationisbeautiful.net/beautifulnews\" target=\"_blank\" rel=\"noreferrer\">Beautiful News</a>.\n      </div>\n    </>\n  )\n}\n\nexport default visLayout\n\nvisLayout.propTypes = {\n  currentMDXs: PropTypes.any,\n  nextPageRef: PropTypes.any,\n}","import React, { useRef } from \"react\"\nimport { graphql } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport { loadMoreVisualisation } from \"../../utils/hooks/loadMoreVisualisation\"\nimport VisLayout from \"../../components/visualisation/visLayout\"\n\nconst visTemplate = ({data: {allMdx} }) => {\n  const allMDX = [];\n  const nextPageRef = useRef();\n\n  for(let i = 0; i < allMdx.edges.length; ++i){\n    allMDX.push(allMdx.edges[i]);\n    allMDX.push(allMdx.edges[Math.floor(Math.random() *allMdx.edges.length)]);\n    allMDX.push(allMdx.edges[Math.floor(Math.random() *allMdx.edges.length)]);\n    allMDX.push(allMdx.edges[Math.floor(Math.random() *allMdx.edges.length)]);\n    allMDX.push(allMdx.edges[Math.floor(Math.random() *allMdx.edges.length)]);\n  }\n\n  const currentMDXs = loadMoreVisualisation(allMDX, nextPageRef);\n\n  return(\n    <VisLayout currentMDXs={currentMDXs} nextPageRef={nextPageRef} />\n  )\n}\n\nexport default visTemplate\n\nvisTemplate.propTypes = {\n  data: PropTypes.any,\n}\n\n\nexport const query = graphql`\n\tquery visualisationList {\n\t\tallMdx(\n\t\t\tfilter: { frontmatter: { type: { eq: \"visualisation\" } } }\n\t\t\tsort: { fields: [frontmatter___date], order: DESC }\n\t\t) {\n      edges {\n        node {\n          id\n          frontmatter {\n            ...MdxFrontmatter\n            rowSpan\n            columnSpan\n          }\n          fields {\n            ...MdxFields\n          }\n        }\n      }\n\t\t}\n\t}\n`","import { useState, useEffect } from 'react';\n\n/**\n * Hook for load more visualisations\n * @param {object} allMdx All visualisation items\n * @param {*} nextPageRef React useRef - referencing load-more div. \n * @param {string} referenceId Element id for load-more div.\n * @param {int} pageLength \n * @returns current list of visualisation\n */\nexport function loadMoreVisualisation(allMdx, nextPageRef, referenceId, pageLength) {\n  const PAGE_LENGTH = pageLength ?? 10;\n  const refId = referenceId ?? \"visualisation-invite\";\n  const [currentMDXs, setCurrentMDXs] = useState([...allMdx.slice(0, PAGE_LENGTH)]);\n  const [loadNextPage, setLoadNextPage] = useState(false);\n  const [hasNextPage, setHasNextPage] = useState(allMdx.length > PAGE_LENGTH);\n\n  // Check if observed the loadNextPage element\n  // https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver\n  useEffect(() => {\n    const options = {\n      root: null,\n      rootMargin: \"0px 0px 10px 0px\",\n      threshold: 0.7,\n    }\n    const refObserver = new IntersectionObserver((entries) => {\n      if (entries[0].isIntersecting) {\n        setLoadNextPage(true);\n      }\n    }, options);\n\n    if (nextPageRef.current) {\n      refObserver.observe(nextPageRef.current);\n    }\n  }, []);\n\n\n  // Monitor remaining visualisations on update of visualisation objects\n  useEffect(() => {\n    const hasNext = allMdx.length > currentMDXs.length;\n    setHasNextPage(hasNext);\n\n    if (!hasNext) {\n      const addMoreVisBox = document.querySelector(`#${refId}`);\n      addMoreVisBox.style.visibility = 'visible';\n      addMoreVisBox.parentElement.appendChild(addMoreVisBox);\n    }\n  },[currentMDXs])\n\n\n  // Load more visualisations objects\n  useEffect(() => {\n    // load more only if intended too & there are more objects\n    if (!loadNextPage || !hasNextPage) {\n      return;\n    }\n\n    // Get next page content\n    const moreMDX = allMdx.length > currentMDXs.length;\n    const nextPageMDX = moreMDX ? allMdx.slice(currentMDXs.length, currentMDXs.length + PAGE_LENGTH) : [];\n    \n    // Merge into current content\n    setCurrentMDXs([...currentMDXs, ...nextPageMDX]);\n    setLoadNextPage(false);\n  }, [loadNextPage, hasNextPage])\n  \n  return currentMDXs;\n}"],"sourceRoot":""}