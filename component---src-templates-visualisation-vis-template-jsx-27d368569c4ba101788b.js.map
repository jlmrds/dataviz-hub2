{"version":3,"sources":["webpack://datavizhub-tuos/./src/templates/visualisation/visTemplate.jsx"],"names":["allMdx","data","pageContext","allMDX","nextPageRef","useRef","i","edges","length","push","Math","floor","random","currentMDXs","loadMoreVisualisation"],"mappings":"6KAyBA,UAnBoB,SAAC,GAInB,IAJuD,IAA5BA,EAA2B,EAAlCC,KAAOD,OAASE,EAAkB,EAAlBA,YAC9BC,EAAS,GACTC,GAAcC,cAEZC,EAAI,EAAGA,EAAIN,EAAOO,MAAMC,SAAUF,EACxCH,EAAOM,KAAKT,EAAOO,MAAMD,IACzBH,EAAOM,KAAKT,EAAOO,MAAMG,KAAKC,MAAMD,KAAKE,SAAUZ,EAAOO,MAAMC,UAChEL,EAAOM,KAAKT,EAAOO,MAAMG,KAAKC,MAAMD,KAAKE,SAAUZ,EAAOO,MAAMC,UAChEL,EAAOM,KAAKT,EAAOO,MAAMG,KAAKC,MAAMD,KAAKE,SAAUZ,EAAOO,MAAMC,UAChEL,EAAOM,KAAKT,EAAOO,MAAMG,KAAKC,MAAMD,KAAKE,SAAUZ,EAAOO,MAAMC,UAGlE,IAAMK,GAAcC,OAAsBX,EAAQC,GAElD,OACE,QAAC,IAAD,CAAWS,YAAaA,EAAaT,YAAaA,EAAaF,YAAaA","file":"component---src-templates-visualisation-vis-template-jsx-27d368569c4ba101788b.js","sourcesContent":["import React, { useRef } from \"react\"\nimport { graphql } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport { loadMoreVisualisation } from \"../../utils/hooks/loadMoreVisualisation\"\nimport VisLayout from \"../../components/visualisation/visLayout\"\n\nconst visTemplate = ({data: {allMdx}, pageContext }) => {\n  const allMDX = [];\n  const nextPageRef = useRef();\n\n  for(let i = 0; i < allMdx.edges.length; ++i){\n    allMDX.push(allMdx.edges[i]);\n    allMDX.push(allMdx.edges[Math.floor(Math.random() *allMdx.edges.length)]);\n    allMDX.push(allMdx.edges[Math.floor(Math.random() *allMdx.edges.length)]);\n    allMDX.push(allMdx.edges[Math.floor(Math.random() *allMdx.edges.length)]);\n    allMDX.push(allMdx.edges[Math.floor(Math.random() *allMdx.edges.length)]);\n  }\n\n  const currentMDXs = loadMoreVisualisation(allMDX, nextPageRef);\n\n  return(\n    <VisLayout currentMDXs={currentMDXs} nextPageRef={nextPageRef} pageContext={pageContext} />\n  )\n}\n\nexport default visTemplate\n\nvisTemplate.propTypes = {\n  data: PropTypes.any,\n}\n\n\nexport const query = graphql`\n\tquery visualisationList {\n\t\tallMdx(\n\t\t\tfilter: { frontmatter: { type: { eq: \"visualisation\" } } }\n\t\t\tsort: { fields: [frontmatter___date], order: DESC }\n\t\t) {\n      edges {\n        node {\n          id\n          frontmatter {\n            ...MdxFrontmatter\n            rowSpan\n            columnSpan\n          }\n          fields {\n            ...MdxFields\n          }\n        }\n      }\n\t\t}\n\t}\n`"],"sourceRoot":""}