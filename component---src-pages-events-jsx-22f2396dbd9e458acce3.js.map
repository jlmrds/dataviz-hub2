{"version":3,"sources":["webpack:///./src/components/events/upcomingEvents.jsx","webpack:///./src/components/events/pastEvents.jsx","webpack:///./src/components/events/pastEventsBlog.jsx","webpack:///./src/pages/events.jsx"],"names":["UpcomingEvents","allEventbriteEvents","size","edges","length","map","node","summary","shortenText","className","style","transition","href","url","key","id","target","rel","name","text","start","local","online_event","venue","address","address_1","city","postal_code","backgroundImage","logo","original","backgroundPosition","backgroundSize","bottom","right","PastEvents","pastEvent","onClick","window","open","title","PastEventsBlog","pastEventBlog","description","frontmatter","to","fields","slug","date","events","data","eventBrite","useState","moment","format","currentDate","setDate","useEffect","keywords","backgroundColor","background","borderTop"],"mappings":"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","file":"component---src-pages-events-jsx-22f2396dbd9e458acce3.js","sourcesContent":["import React from 'react'\nimport PropTypes from \"prop-types\"\nimport { FaMapMarkerAlt, FaClock } from \"react-icons/fa\"\nimport { shortenText } from \"../../utils/shared\"\n\nconst UpcomingEvents = ({allEventbriteEvents}) => {\n  let size = allEventbriteEvents.edges.length\n  \n  if(allEventbriteEvents && (size > 0)) {\n    return (\n      <> \n      {allEventbriteEvents.edges.map(({node}) => {\n        //moment(node.start.local, \"DD-MMMM-YYYY hh:mm\") >= moment() && \n        let summary = shortenText(node.summary, 20)\n\n        return (\n          <a className=\"flex flex-col-reverse md:flex-row flex-wrap w-full hover:shadow-xl overflow-y-hidden bg-white my-3 lg:my-1 text-gray-700 group border-2 border-gray-50\" \n            style={{transition: \".5s ease\"}} href={node.url} key={node.id} target=\"_blank\" rel=\"noopener noreferrer\"\n          >\n            <div className=\"w-full md:w-9/12 py-4 px-4\">\n              <p className=\"font-semibold text-lg text-black group-hover:text-brand-blue leading-5\">{node.name.text}</p>\n              <p className=\"text-gray-700 mt-1 leading-tight text-sm group-hover:text-black\">{summary}</p>\n              <p className=\"flex pt-4 text-sm\"><FaClock className=\"mr-1\" />{node.start.local}</p>\n              \n              <div className=\"flex flex-wrap text-sm\">\n                  <p className=\"flex\">{node.online_event && (<FaMapMarkerAlt className=\"mr-1 mt-1\" />)} {node.online_event && (\"Online Event\") }</p>\n                  <p className=\"flex\">\n                    {node.venue && ( <FaMapMarkerAlt className=\"mr-1 mt-1\" /> )} \n                    {node.venue && node.venue.name && (node.venue.name + \", \")} \n                    {node.venue && node.venue.address.address_1 && (node.venue.address.address_1 + \", \")} \n                    {node.venue && node.venue.address.city && (node.venue.address.city + \", \")}\n                    {node.venue && node.venue.address.postal_code && (node.venue.address.postal_code)}\n                  </p>\n              </div>\n            </div>\n            <div className=\"w-full md:w-3/12 overflow-hidden relative min-h-15 2xl:min-h-15\" style={{backgroundImage: `url(${node.logo.original.url})`, backgroundPosition: 'center', backgroundSize: 'cover', transition: '.5s ease'}}>\n              <button href={node.url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"hidden group-hover:flex py-1 px-3 font-semibold text-md bg-black text-white hover:bg-blue-900 absolute\" style={{bottom: '0%', right: '0%', }}>\n                Register\n              </button>\n            </div>\n          </a> \n        )\n        \n      })}\n      </>\n    )\n  } else {\n    return (\n      <div className=\"mt-16 text-blue-800\">No upcoming events at the moment, please come back later.</div>\n    )\n  }\n}\n\nexport default UpcomingEvents\n\nUpcomingEvents.propTypes = {\n  allEventbriteEvents: PropTypes.any,\n}\n\n","import React from 'react'\nimport PropTypes from \"prop-types\"\nimport { BlackWhiteButton } from \"../style/styled\"\nimport { shortenText } from \"../../utils/shared\"\n\nconst PastEvents = ({pastEvent}) => {\n  \n  return (\n    <div className=\"w-full md:w-4/5 lg:w-4/12 2xl:w-3/12 lg:rounded-r-sm md:mt-10 lg:mt-0 p-6 pb-8 text-gray-100 border-t-8 border-gray-800 min-h-50 bg-gray-900\">\n      <h1 className=\"text-xl pt-2 pb-6 font-semibold\">Past Events</h1>\n      \n      {pastEvent.edges.map(({ node }) => {\n        let summary = shortenText(node.summary, 15)\n\n        return (\n          <div className=\"cursor-pointer flex flex-wrap p-4 w-full overflow-hidden group pastEvent\" key={node.id} onClick={()=>window.open(node.url, \"_blank\", \"noopener, noreferrer\")}>\n            <p className=\"font-semibold text-md text-black leading-4\">{node.name.text}</p>\n            <p className=\"text-gray-700 text-xs leading-4 mt-1\">{summary}</p>\n            <p className=\"mt-2 text-xs text-black\">{node.start.local}</p>\n          </div>\n        )\n      })} \n      {\n        pastEvent.edges.length > 0 && \n        <div className=\"flex justify-center w-full\" title=\"More past events\">\n          <BlackWhiteButton onClick={()=>window.open(\"https://www.eventbrite.co.uk/o/scholarly-communications-team-the-university-of-sheffield-library-7528476001\", \"_blank\", \"noopener, noreferrer\")} \n            className=\"w-full mt-0 hover:bg-blue-900 hover:text-white\"\n          >\n            . . .\n          </BlackWhiteButton>\n        </div>\n      }\n    </div>\n  )\n\n\n  \n}\n\nexport default PastEvents\n\nPastEvents.propTypes = {\n  pastEvent: PropTypes.any,\n}\n\n","import React from 'react'\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\nimport { shortenText } from \"../../utils/shared\"\n\nconst PastEventsBlog = ({pastEventBlog}) => {\n  \n  return (\n    <div className=\"w-full md:w-11/12 2xl:w-10/12 px-6 lg:mt-6 lg:mb-16 pb-8 lg:py-6 border-t-8 border-gray-50 min-h-30 rounded-sm bg-white\">\n      <h1 className=\"text-2xl pt-2 pb-6 font-semibold\">Event articles</h1>\n      \n      {pastEventBlog.edges.map(({ node }) => {\n        let description = shortenText(node.frontmatter.description, 20)\n\n        return (\n          <div className=\"flex flex-wrap transition duration-500 overflow-hidden p-3 md:w-1/2 lg:w-1/4 rounded-sm bg-white group hover:border-1 hover:border-gray-600 border-1 border-white\" key={node.id}>\n            <Link to={node.fields.slug}>\n            <p className=\"font-bold text-black leading-5\">{node.frontmatter.title}</p>\n            <p className=\"text-gray-700 mt-1 text-sm leading-4\">{description}</p>\n            <p className=\"mt-2 text-sm text-black\">{node.frontmatter.date}</p>\n            </Link>\n          </div>\n        )\n\n      })} \n    </div>\n  )\n}\n\nexport default PastEventsBlog\n\nPastEventsBlog.propTypes = {\n  pastEventBlog: PropTypes.any,\n}\n\n","import React, {useState, useEffect} from \"react\"\nimport { graphql } from \"gatsby\"\nimport SEO from \"../components/shared/seo\"\nimport Header from \"../components/shared/header\"\nimport Footer from \"../components/shared/footer\"\n// import BackgroundSection from \"../components/images/eventBackground\"\nimport PropTypes from \"prop-types\"\nimport UpcomingEvents from \"../components/events/upcomingEvents\"\nimport PastEvents from \"../components/events/pastEvents\"\nimport PastEventsBlog from \"../components/events/pastEventsBlog\"\nimport moment from \"moment\"\n\nconst events = ({data: {eventBrite, pastEvent, pastEventBlog}}) => {\n\n  const [currentDate, setDate] = useState(moment().format('ddd DD MMMM YYYY, hh:mm A'));\n  useEffect(() => {\n    setDate(moment().format('ddd DD MMMM YYYY, hh:mm A'))\n  }, [])\n\n  return (\n    <>\n      <SEO \n        title=\"Events\" \n        keywords={[\"the university of sheffield\", \"data visualisation\", \"data visualisation hub\", \"research\", \"dataviz events\", \"dataviz.shef\"]} \n      />\n      <Header />\n      <div className=\"flex flex-wrap flex-grow-0 items-center justify-center min-h-100\" style={{backgroundColor: 'rgb(255,121,180)', backgroundImage: 'linear-gradient(225deg, rgba(255,121,180,1) 20%, rgba(255,163,251,1) 50%, rgba(41,197,255,1) 82%)'}}>\n        <div className=\"flex flex-wrap w-full justify-center my-16 lg:my-24\">\n          <div className=\"w-full lg:w-7/12 p-6 text-black overflow-auto min-h-70 lg:rounded-l-sm\" style={{background: '#fbfbfb', borderTop: 'solid 8px #e93e30'}}>\n            <h1 className=\"inline-block text-2xl font-semibold\">Upcoming Events</h1>\n            <div className=\"text-gray-900 mb-8\" >Today: {currentDate}</div>\n            <UpcomingEvents allEventbriteEvents={eventBrite} />\n          </div>\n          <PastEvents pastEvent={pastEvent} />\n        </div>\n        <PastEventsBlog pastEventBlog={pastEventBlog} /> \n      </div>\n      <Footer />\n    </>\n  )\n}\n\nexport default events\n\nevents.propTypes = {\n\t\tdata: PropTypes.any\n  }\n  \n  \n\nexport const query = graphql`\n  query {\n    eventBrite: \n    allEventbriteEvents(limit: 4, sort: {fields: start___local, order: ASC}, filter: {id: {ne: \"777\"}, isFuture: {eq: true}}) {\n      ...EventbriteEventsEdge\n    }\n\n    pastEvent: \n    allEventbriteEvents(limit: 5, sort: {fields: start___local, order: DESC}, filter: {id: {ne: \"777\"}, isFuture: {eq: false}}) {\n      ...EventbriteEventsEdge\n    }\n\n    pastEventBlog: \n    allMdx(limit: 5, filter: {frontmatter: {category: {in: \"Events\"}, hide: {ne: \"true\"} }}, sort: {order: DESC, fields: frontmatter___date}) {\n      edges {\n        node {\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n          id\n          frontmatter {\n            date(formatString: \"dddd, DD MMMM YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  \n  }\n`;\n\n\n\n\n"],"sourceRoot":""}